name: rsr dev

on:
  push:
    branches:
      - main
    paths:
      - rsr/dev/**
      - azure-devtest.tf
      - .github/workflows/rsr_dev.yml
      - shared/modules/azure-app-service/**
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - reopened
    branches:
      - main
    paths:
      - rsr/dev/**
      - azure-devtest.tf
      - .github/workflows/rsr_dev.yml
      - shared/modules/azure-app-service/**

env:
  GITHUB_ORGANIZATION: ministryofjustice
  ENVIRONMENT: rsr/dev
  GITHUB_USERNAME: hmpps-dso-automation
  GITHUB_TOKEN: ${{ secrets.DSO_GITHUB_AUTOMATION_PAT }}
  WORKING_DIRECTORY: rsr/dev
  ARM_CLIENT_ID: b11478e9-3ca6-40b8-bbcd-9cb46c02957c
  ARM_CLIENT_SECRET: ${{ secrets.DIGITAL_STUDIO_INFRA_DEVTEST_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: c27cfedb-f5e9-45e6-9642-0fad1a5c94e7
  ARM_TENANT_ID: 747381f4-e81f-4a43-bf68-ced6a1e14edf

jobs:
  verify-terraform-config:
    runs-on: ubuntu-latest
    environment: rsr/dev

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.11

      - name: terraform code formatter
        if: ${{ github.event_name == 'pull_request' }}
        uses: ministryofjustice/github-actions/code-formatter@main

      - name: Terraform Init
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: terraform init

      - name: terraform validate
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: terraform validate

      - name: terraform refresh
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: |
          terraform refresh

      - name: terraform plan
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: |
          terraform plan -out=tf.plan -refresh=false -no-color > tf_out.txt
          tail -c 65476 tf_out.txt > tf_plan.txt
          cat tf_plan.txt
          echo 'TF_PLAN_OUT<<EOF' >> $GITHUB_ENV
          cat tf_plan.txt >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Post a PR comment with the terraform plan output
        if: ${{ github.event_name == 'pull_request' }}
        uses: allthatjazzleo/actions-pull-request-add-comment@master
        with:
          GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
          message: "Terraform plan output in ${{ env.ENVIRONMENT }}: \n```\n${{ env.TF_PLAN_OUT }}\n```"


      - name: Post a post merge PR comment with the terraform plan output
        if: ${{ github.event.pull_request.merged || github.event_name == 'push' }}
        uses: guchaocharlie/comment-pr@v1
        with:
          github-token: ${{ env.GITHUB_TOKEN }}
          comment: "Terraform plan output in ${{ env.ENVIRONMENT }}: \n```\n${{ env.TF_PLAN_OUT }}\n```"

      - name: terraform apply
        if: ${{ github.event.pull_request.merged || github.event_name == 'push' }}
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: |
          terraform apply -auto-approve -no-color tf.plan > tf_out.txt
          tail -c 65476 tf_out.txt > tf_apply.txt
          cat tf_apply.txt
          echo 'TF_APPLY_OUT<<EOF' >> $GITHUB_ENV
          cat tf_apply.txt >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Post a post merge PR comment with the terraform apply output
        if: ${{ github.event.pull_request.merged || github.event_name == 'push' }}
        uses: guchaocharlie/comment-pr@v1
        with:
          github-token: ${{ env.GITHUB_TOKEN }}
          comment: "Terraform apply output in ${{ env.ENVIRONMENT }}: \n```\n${{ env.TF_APPLY_OUT }}\n```"
